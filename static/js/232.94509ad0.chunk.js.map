{"version":3,"file":"static/js/232.94509ad0.chunk.js","mappings":"gRACA,EAA4B,wBAA5B,EAA2D,mBAA3D,EAAqF,mBAArF,EAAgH,oB,SCkEhH,EA5Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAaC,EAAb,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAQ,SAAAK,GAAS,yBAAUA,GAAV,IAAqBR,SAAS,OAFjC,UAGOS,EAAAA,EAAAA,IAAgBL,GAHvB,OAGRM,EAHQ,OAIdP,GAAQ,SAAAK,GAAS,yBACZA,GADY,IAEfT,MAAOW,EAAOR,KACdF,SAAS,OAPG,gDAUdG,GAAQ,SAAAK,GAAS,yBACZA,GADY,IAEfP,MAAO,KAAMU,QACbX,SAAS,OAbG,yDAAH,qDAiBfO,MACC,CAACH,IAEJ,IAAMQ,EAAWV,EAAKH,MAAMc,KAAI,SAAAC,GAAI,OAClC,gBAAkBC,UAAWC,EAA7B,WACE,gBACEC,IACEH,EAAKI,aAAL,yCACsCJ,EAAKI,cACvCC,EAENC,IAAKN,EAAKO,KACVC,MAAM,MACNC,OAAO,SAET,uBAAIT,EAAKO,QACT,uCAAeP,EAAKU,eAZbV,EAAKV,OAgBRJ,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAEjB,OACE,iBAAKc,UAAWC,EAAhB,UACGhB,IAAW,sCACXC,IAAS,wEAEV,eAAIc,UAAWC,EAAf,mBACA,eAAID,UAAWC,EAAf,SAA6BJ,S,iMC5D7Ba,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAS,mCAAG,sGACAL,EAASM,IAAI,sBADb,uBACfC,EADe,EACfA,KADe,kBAEhBA,EAAKC,SAFW,2CAAH,qDAKTC,EAAY,mCAAG,WAAO9B,GAAP,yFACHqB,EAASM,IAAT,gBAAsB3B,IADnB,uBAClB4B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZvB,EAAe,mCAAG,WAAOL,GAAP,yFACNqB,EAASM,IAAT,gBAAsB3B,EAAtB,aADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAe,mCAAG,WAAO/B,GAAP,yFACNqB,EAASM,IAAT,gBAAsB3B,EAAtB,aADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAgB,mCAAG,WAAOC,GAAP,yFACPZ,EAASM,IAAT,6BAAmCM,IAD5B,uBACtBL,EADsB,EACtBA,KADsB,kBAEvBA,EAAKC,SAFkB,2CAAH,uD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","shared/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"cast_container__xBK1C\",\"list\":\"cast_list__bULim\",\"item\":\"cast_item__AMMjV\",\"title\":\"cast_title__R2CBp\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from '../../shared/services/API';\nimport notFound from '../../shared/services/img/notFound.jpg';\nimport styles from './cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setCast(prevState => ({ ...prevState, loading: true }));\n        const result = await getMovieCredits(id);\n        setCast(prevState => ({\n          ...prevState,\n          items: result.cast,\n          loading: false,\n        }));\n      } catch (error) {\n        setCast(prevState => ({\n          ...prevState,\n          error: error.message,\n          loading: false,\n        }));\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const elements = cast.items.map(item => (\n    <li key={item.id} className={styles.item}>\n      <img\n        src={\n          item.profile_path\n            ? `https://image.tmdb.org/t/p/w500${item.profile_path}`\n            : notFound\n        }\n        alt={item.name}\n        width=\"100\"\n        height=\"150\"\n      />\n      <p>{item.name}</p>\n      <p>Character: {item.character}</p>\n    </li>\n  ));\n\n  const { loading, error } = cast;\n\n  return (\n    <div className={styles.container}>\n      {loading && <p>...loading</p>}\n      {error && <p>Sorry, we didn't find info about this film.</p>}\n\n      <h3 className={styles.title}>Cast</h3>\n      <ul className={styles.list}>{elements}</ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"95d99059b83ce58675fad807e29d492a\",\n  },\n});\n\nexport const getMovies = async () => {\n  const { data } = await instance.get(\"trending/movie/day\");\n  return data.results;\n};\n\nexport const getMovieById = async (id) => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMovieBySearch = async (query) => {\n  const { data } = await instance.get(`search/movie?query=${query}`);\n  return data.results;\n};"],"names":["useState","items","loading","error","cast","setCast","id","useParams","useEffect","fetchCast","prevState","getMovieCredits","result","message","elements","map","item","className","styles","src","profile_path","notFound","alt","name","width","height","character","instance","axios","baseURL","params","api_key","getMovies","get","data","results","getMovieById","getMovieReviews","getMovieBySearch","query"],"sourceRoot":""}